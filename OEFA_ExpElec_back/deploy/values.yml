# Nombre de los objetos a desplegar.
name: backend
# Nombre del espacio de trabajo (namespace) sobre kubernetes donde se desplegará el microservicio.
namespace: ima
# Versión (tag) del microservicio a desplegar. Valor por defecto "latest".
version: latest

# Configuración del Ingress (https://kubernetes.io/docs/concepts/services-networking/service/)
ingress:
  # URL donde irá desplegada la aplicación.
  url: desarrollo.oefa.gob.pe
  # Path o contexto donde se expondrá la aplicación, por ejemplo "/my/app".
  path: /zuul/siee-backend
  # Habilitar o deshabilitar la reescritura de path hacia "/", es decir que se elimine el path en la petición antes de enviarla a los pods (true|false).
  rewrite: 
    enabled: true
  # Habilitar o deshabilitar PathPrefixStrip (true|false).  
  PathPrefixStrip:
    enable: false

# Configuración de Deployment 
deployment:
  # Imagen utilizada en el despliegue (no modificar).
  image: $CI_REGISTRY_IMAGE
  # Puerto en el cual escucha el pod.
  port: 9092
  # Protocolo del puerto en el cual escucha el pod (TCP|UDP). Por defecto será TCP.
  protocol:
  # Modo de uso del secret (envFrom | volume) por defecto envFrom.  
  secrets:
    type: envFrom
    # Si es tipo "volume" configurar lo siguiente.
    #name:
    # True o False  
    #readOnly: True
    #mountPath:
  configmap:
    type: envFrom
    # Si es tipo "volume" configurar lo siguiente.
    #name:
    # True o False  
    #readOnly: True
    #mountPath:
    #defaultMode:  

# Creación de Secrets (https://kubernetes.io/es/docs/concepts/configuration/secret/)
secrets:
  enabled: true
  ALFRESCO_APP_ID: '303'
  ALFRESCO_KEY_URL: 'https://desarrollo.oefa.gob.pe'
  ALFRESCO_PASSWORD: 'ws_monitoreo'
  ALFRESCO_REST_URL: 'https://desarrollo.oefa.gob.pe'
  ALFRESCO_USER: 'ws_monitoreo'
  DB_CONNECTION_TYPE: 'SERVICE_NAME'
  DB_CONNECTION_VALUE: 'dvoefacore'
  DB_HOST: '10.6.0.15'
  DB_PASSWORD: 'desarrollo'
  DB_PORT: '1532'
  DB_USERNAME: 'CORE_SIEE'
  ENVIRONMENT: 'prod'
  ID_APLICACION: '303'
  LOG_LEVEL: 'INFO'
  REST_DNI_AUTORIZADO: '73676696'
  REST_ID_APLICACION: '303'
  REST_ID_PERFIL_USUARIO_PRINCIPAL: '345'
  REST_ID_PERFIL_USUARIO_SECUNDARIO: '347'
  REST_KEY_TOKEN: 'U3NvQXBwOmIzYjc0NDM0MWE4NzA5MWFkNTRmZjU4ZDY4OTg5OGFk'
  REST_PASSWORD: 'A12345$'
  REST_PERSONA_EXTRANJERA_URI: 'https://desarrollo.oefa.gob.pe/sso2/OefaAdmSeg/personas/'
  REST_PERSONA_URI: 'https://desarrollo.oefa.gob.pe/sso2/OefaAdmSeg/personas/'
  REST_SEGURIDAD_URI: 'https://desarrollo.oefa.gob.pe/sso2/OefaAdmSeg/seguridad/'
  REST_USUARIO: 'UsuarioREST'
  SERVER_PORT: '9092'
  SERVICE_NAME: 'siee-backend'
  SIGED_CONSULTA_URL: 'http://desarrollo.oefa.gob.pe/siged-rest/api/'
  SIGED_LOGIN_URL: 'https://desarrollo.oefa.gob.pe/siged-rest/login'
  SIGED_PASSWORD: '"12345678"'
  SIGED_USER: 'testsiged'
  SIIA_DATABASE_PASSWORD: 'desarrollo'
  SIIA_DATABASE_URL: 'jdbc:sqlserver://10.1.1.125:1433;databaseName=DB_OEFA_SGA_MASTER_REPLICA'
  SIIA_DATABASE_USER: 'desa1'

# Creación de configmap (https://kubernetes.io/es/docs/concepts/configuration/configmap/)
configmap: 
  enabled: false
  #var1: key1
  #var2: key2

# --
# Configuraciones avanzadas
# --

# Configuración de reserva y límites de recursos de los pods (https://kubernetes.io/es/docs/concepts/configuration/manage-resources-containers/)
resources:
  requests:
    enabled: false
    # Memoria reservada por cada pod expresado en megabytes (Mi), por ejemplo 100 Megabytes sería "100Mi". 
    memory:
    # CPU reservado por cada pod en expresado microcores (m), por ejemplo un cuarto de core sería "250m", un core completo sería "1000m", etc.
    cpu:
  limits:
    enabled: false
    # Memoria máxima que puede usar el pod (default deployment.memory).
    memory:
    # CPU máximo que puede usar el pod (default deployment.cpu).
    cpu:

# Configuración del Horizontal Pod Autoscaling (https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/)
hpa:
  # Habilitar o deshabilitar la creación de hpa (true|false)
  enabled: false
  # Mínimo número de pods a levantar.
  minReplicas:
  # Máximo número de pods a escalar.
  maxReplicas:
  # Porcentaje de utilización del CPU asignado antes de escalar un pod adicional, se sugiere el valor 80.
  targetCPUUtilizationPercentage:
  # Porcentaje de memoria del CPU asignado antes de escalar un pod adicional.  
  targetMemoryUtilizationPercentage:

# Configuración de actuator.
actuatorport:
  # Habilitar o deshabilitar la creación del puerto adicional para su uso como actuator dentro del deployment.
  enabled: true
  # Puerto del actuator.
  port: 6587

# Configuración de livenessProbe (https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/)
livenessProbe:
  # Habilitar o deshabilitar la creación del livenessProbe.
  enabled: true
  httpGet:
    path: /actuator/health/liveness
    port: 6587
  failureThreshold: 20
  periodSeconds: 2

# Configuración de readinessProbe (https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/)
readinessProbe:
  enabled: true
  httpGet:
    path: /actuator/health/readiness
    port: 6587
  failureThreshold: 25
  periodSeconds: 2

# Configuración de startupProbe (https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/)
startupProbe:
  enabled: true
  httpGet:
    port: 6587
    path: /actuator/health/readiness
  failureThreshold: 10
  successThreshold: 1
  periodSeconds: 12
  timeoutSeconds: 10
  initialDelaySeconds: 30

# Configuración del Service Monitor (https://observability.thomasriley.co.uk/prometheus/configuring-prometheus/using-service-monitors/)
serviceMonitor:
  enabled: true
  path: /actuator/prometheus
  interval: 15s
  honorLabels: false

# Configuración del Security context usado para correr los contenedores del pod con menos privilegios [no root] (https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
podSecurityContext:
  enabled: false
  #fsGroup: 1000

# Configuración del Security context usado para correr el contenedor principal con menos privilegios [no root] (https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
containerSecurityContext:
  enabled: false
  #runAsUser: 1001
  #runAsNonRoot: true
  #runAsGroup: 1001
  #allowPrivilegeEscalation: false
  #privileged: false
  #capabilities:
  #  drop:
  #    - ALL
  #readOnlyRootFilesystem: false
